# Generated by Django 2.2.2 on 2019-06-26 02:25

import api.config.storage_backends
import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Unique username to identify the user. Letters, digits and @/./+/-/_ only.', max_length=150, primary_key=True, serialize=False, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(default='', max_length=255)),
                ('last_name', models.CharField(default='', max_length=255)),
                ('date_of_birth', models.DateField(help_text='In YYYY-MM-DD format', verbose_name='Date of Birth')),
                ('about', models.TextField(default="I haven't filled my About section out yet!", help_text='Profile description for the user')),
                ('avatar', models.ImageField(blank=True, null=True, storage=api.config.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('header', models.ImageField(blank=True, help_text="The header image can be used as a backsplash for the user's profile.", null=True, storage=api.config.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates that this user can log into the admin site.', verbose_name='Staff Status')),
                ('is_mod', models.BooleanField(default=False, help_text='Designates that this user has extra power to flag, report, and ban users / posts.', verbose_name='Moderator Status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
